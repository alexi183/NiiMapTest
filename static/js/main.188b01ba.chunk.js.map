{"version":3,"sources":["actions/Map.js","reducers/MapReducer.js","stores/store.js","helpers/validate.js","components/Form/Form.js","components/Map/Map.js","container/MapContainer.js","index.js"],"names":["ADD_ITEM","INITIAL_STATE","marks","messageMarkerAdded","deleteMark","deleteConfirm","MapReducer","state","arguments","length","undefined","action","type","actions","Object","toConsumableArray","find","item","title","toLowerCase","objectSpread","concat","updatedList","splice","payload","reducer","combineReducers","form","formReducer","persistedState","serializedState","localStorage","getItem","JSON","parse","e","console","log","loadFromLocalStorage","store","createStore","applyMiddleware","reduxThunk","logger","subscribe","stringify","setItem","saveToLocalStorage","getState","min","max","required","value","coorValidate","test","number","isNaN","Number","checkLength1","renderField","_ref","input","name","placeholder","className","_ref$meta","meta","touched","error","react_default","a","createElement","assign","Form","_this$props","this","props","addItem","handleSubmit","reset","removeMarkMessage","removeItem","resetItem","removeAlert","removeConfirm","pristine","submitting","lastMarkId","onSubmit","Field","component","validate","val","disabled","onClick","setTimeout","Component","reduxForm","onSubmitSuccess","result","dispatch","MapComponent","react_yandex_maps_umd_production_min","center","zoom","controls","width","height","modules","map","i","key","geometry","latitude","longitude","options","preset","properties","iconCaption","MapContainer","components_Form_Form","Map_Map","connect","markerAdded","form2","id","values","root","document","getElementById","ReactDOM","render","es","src_container_MapContainer"],"mappings":"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","file":"static/js/main.188b01ba.chunk.js","sourcesContent":["export const ADD_ITEM = 'ADD_ITEM';\nexport const REMOVE_MARK_ADDED_MESSAGE = 'REMOVE_MARK_ADDED_MESSAGE';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const RESET_ITEM = 'RESET_ITEM';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REMOVE_CONFIRM = 'REMOVE_CONFIRM';\n\nexport function addItem() {\n   return (dispatch, getState) => {\n      const form = getState().form.marks;\n      const form2 = getState();\n      console.log(form2);\n      const bookId = getState().marks.marks.length;\n      const marks = {\n         id: +bookId+1,\n         title: form.values.title,\n         latitude: +form.values.latitude,\n         longitude: +form.values.longitude\n      };\n      dispatch({\n         type: ADD_ITEM,\n         marks\n      });\n   }\n}\n\nexport const removeItem = (id) => ({\n   type: REMOVE_ITEM,\n   payload: id\n});\n\nexport const removeMarkMessage = () => ({\n   type: REMOVE_MARK_ADDED_MESSAGE,\n});\n\nexport const resetItem = () => ({\n   type: RESET_ITEM\n});\n\nexport const removeAlert = () => ({\n   type: REMOVE_ALERT\n})\n\nexport const removeConfirm = () => ({\n   type: REMOVE_CONFIRM\n})\n\n","import * as actions from '../actions/Map';\n\nconst INITIAL_STATE = {\n   marks: [],\n   messageMarkerAdded: false,\n   deleteMark: false,\n   deleteConfirm: false,\n}\n\nconst MapReducer = (state = INITIAL_STATE, action) => {\n   switch (action.type) {\n\n      case actions.ADD_ITEM:\n\n         if ([...state.marks].find((item) =>\n             item.title.toLowerCase() === action.marks.title.toLowerCase())\n         ) {\n            return {...state, marks: [...state.marks, action.marks], deleteMark: true}\n\n         } else {\n            return {...state, marks: [...state.marks, action.marks], messageMarkerAdded: true}\n         }\n\n      case actions.REMOVE_MARK_ADDED_MESSAGE:\n         return {...state, messageMarkerAdded: false}\n\n      case actions.REMOVE_ITEM:\n         let updatedList = [...state.marks];\n         updatedList.splice(action.payload, 1)\n\n         return {...state, marks: updatedList}\n\n      case actions.REMOVE_ALERT:\n         return {...state, deleteMark: false, deleteConfirm: true}\n\n      case actions.RESET_ITEM:\n         return {...state, deleteMark: false, deleteConfirm: false}\n\n      case actions.REMOVE_CONFIRM:\n         return {...state, deleteConfirm: false}\n\n      default: {\n         return state;\n      }\n   }\n};\n\nexport default MapReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport MapReducer from \"../reducers/MapReducer\";\r\n\r\nfunction saveToLocalStorage(state) {\r\n   try {\r\n      const serializedState = JSON.stringify(state)\r\n      localStorage.setItem('state', serializedState)\r\n   } catch (e) {\r\n      console.log(e)\r\n   }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n   try {\r\n      const serializedState = localStorage.getItem('state')\r\n      if (serializedState === null) return undefined\r\n      return JSON.parse(serializedState)\r\n   } catch (e) {\r\n      console.log(e)\r\n      return undefined\r\n   }\r\n}\r\n\r\nconst reducer = combineReducers({\r\n   marks: MapReducer,\r\n   form: formReducer\r\n});\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    persistedState,\r\n    applyMiddleware(reduxThunk, logger));\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;\r\n\r\n\r\n","export const required = value => (!value && 'Поле обязательно для заполнения');\r\n\r\nexport const checkLength = (min, max) => value =>\r\n    value && (value.length > max || value.length < min) && `Количество символов не должно превышать ${max} и не быть менее ${min}`;\r\n\r\nexport const coorValidate = value =>\r\n    value && !/^(0|[1-9][0-9]{0,2})+\\.(0|[1-9][0-9]{0,8})$/i.test(value) && 'Неверный формат данных, введите число с точкой';\r\n\r\nexport const number = value =>\r\n    value && isNaN(Number(value)) && 'Введите число c точкой';\r\n\r\nexport const checkLength1 = checkLength(3, 75);\r\n","import React, {Component} from 'react';\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport * as val from \"../../helpers/validate\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport \"./Form.css\";\r\n\r\nconst renderField = (\r\n    { input, type, name, placeholder, className,  meta: { touched, error }}) => (\r\n\r\n    <div className=\"form-row-input\">\r\n       <input {...input}\r\n              className={`${touched && error ? \"form-control is-invalid\" :\r\n                  className}`}\r\n              placeholder={placeholder}\r\n              type={type}\r\n              name={name}\r\n       />\r\n       {touched && error && <span className=\"error\">{error}</span>}\r\n    </div>\r\n);\r\n\r\nclass Form extends Component {\r\n   render() {\r\n\r\n      const {\r\n         addItem,\r\n         handleSubmit,\r\n         reset,\r\n         deleteMark,\r\n         messageMarkerAdded,\r\n         removeMarkMessage,\r\n         removeItem,\r\n         deleteConfirm,\r\n         marks,\r\n         resetItem,\r\n         removeAlert,\r\n         removeConfirm,\r\n         pristine,\r\n         submitting\r\n      } = this.props;\r\n\r\n      const lastMarkId = marks.length-1;\r\n\r\n      const handleClick = () => {\r\n         setTimeout(removeItem, 3000, lastMarkId)\r\n         removeAlert()\r\n      }\r\n\r\n      return (\r\n          <form className=\"form\" onSubmit={handleSubmit(addItem)}>\r\n             <div className=\"form-group\">\r\n                <label>Заголовок</label>\r\n                <Field type=\"text\"\r\n                       placeholder=\"Введите заголовок\"\r\n                       className=\"form-control\"\r\n                       component={renderField}\r\n                       validate={[val.required, val.checkLength1]}\r\n                       name=\"title\"\r\n                />\r\n             </div>\r\n\r\n             <div className=\"form-group\">\r\n                <label>Широта</label>\r\n                <Field type=\"text\"\r\n                       className=\"form-control\"\r\n                       placeholder=\"__ . __\"\r\n                       name=\"latitude\"\r\n                       validate={[val.required, val.number, val.coorValidate]}\r\n                       component={renderField}\r\n                />\r\n             </div>\r\n\r\n             <div className=\"form-group\">\r\n                <label>Долгота</label>\r\n                <Field type=\"text\"\r\n                       className=\"form-control\"\r\n                       placeholder=\"__ . __\"\r\n                       name=\"longitude\"\r\n                       validate={[val.required,val.number, val.coorValidate]}\r\n                       component={renderField}\r\n                />\r\n             </div>\r\n\r\n             <button type=\"submit\" disabled={pristine || submitting}  className=\"btn btn-primary mr-3\">\r\n                Добавить маркер\r\n             </button>\r\n             <button type=\"button\" className=\"btn btn-primary\" onClick={reset}>\r\n                Очистить\r\n             </button>\r\n\r\n             {\r\n                messageMarkerAdded && setTimeout(removeMarkMessage, 3000) &&\r\n                <div className=\"mt-5 message\">\r\n                   <div> Маркер успешно добавлен </div>\r\n                </div>\r\n             }\r\n\r\n             {\r\n                deleteMark &&\r\n                <div className=\"mt-5 message\">\r\n                   <div> Маркер с данным именем уже существует. Удалить его ? </div>\r\n                   <div>\r\n                      <button type=\"button\" className=\"btn btn-primary mr-3\"\r\n                              onClick={() => handleClick()}>Да\r\n                      </button>\r\n                      <button type=\"button\" className=\"btn btn-primary \"\r\n                              onClick={() => resetItem()}>Нет\r\n                      </button>\r\n                   </div>\r\n                </div>\r\n             }\r\n\r\n             {\r\n                deleteConfirm && setTimeout(removeConfirm, 3000) &&\r\n                <div className=\"mt-5 message\">\r\n                   Маркер будет удалён через 3 с.\r\n                </div>\r\n             }\r\n          </form>\r\n      )\r\n   }\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('marks'));\r\n\r\n\r\nexport default reduxForm({\r\n   form: 'marks',\r\n   onSubmitSuccess: afterSubmit\r\n})(Form);\r\n\r\n","import React from 'react';\r\nimport {Map, Placemark, YMaps} from 'react-yandex-maps'\r\nimport './Map.css'\r\n\r\nconst MapComponent = (props) => {\r\n\r\n   return (\r\n       <YMaps>\r\n          <Map\r\n              state={{\r\n                 center: [55.75, 37.57],\r\n                 zoom: 7,\r\n                 controls: ['zoomControl', 'fullscreenControl'],\r\n              }}\r\n              width={500}\r\n              height={500}\r\n              modules={['control.ZoomControl', 'control.FullscreenControl']}\r\n          >\r\n\r\n             {props.marks.map((item, i) =>\r\n                 <Placemark\r\n                     key={i}\r\n                     geometry={[item.latitude, item.longitude]}\r\n                     options={{\r\n                        preset: 'islands#nightDotIcon'\r\n                     }}\r\n                     properties={{\r\n                        iconCaption: item.title\r\n                     }}\r\n                 />\r\n             )}\r\n          </Map>\r\n       </YMaps>\r\n   )\r\n}\r\n\r\nexport default MapComponent;\r\n\r\n","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport Form from \"../components/Form/Form\";\nimport MapComponent from \"../components/Map/Map\";\nimport * as actions from \"../actions/Map\";\nimport './MapContainer.css';\n\nclass MapContainer extends Component {\n\n   render() {\n\n      return (\n          <div className=\"container pt-3\">\n             <div className=\"col-xl-6 col-lg-12\">\n                <Form {...this.props} />\n             </div>\n             <div className=\"map-container col-xl-6 col-lg-12\">\n                <MapComponent {...this.props} />\n             </div>\n          </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      marks: state.marks.marks,\n      messageMarkerAdded: state.marks.messageMarkerAdded,\n      markerAdded: state.marks.markerAdded,\n      deleteMark: state.marks.deleteMark,\n      deleteConfirm: state.marks.deleteConfirm,\n   };\n};\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      addItem: () => dispatch(actions.addItem()),\n      removeMarkMessage: () => dispatch(actions.removeMarkMessage()),\n      removeItem: (state) => dispatch(actions.removeItem(state)),\n      resetItem: () => dispatch(actions.resetItem()),\n      removeAlert: () => dispatch(actions.removeAlert()),\n      removeConfirm: () => dispatch(actions.removeConfirm()),\n   };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MapContainer);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './stores/store';\nimport MapContainer from \"./container/MapContainer\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nlet root = document.getElementById('root');\n\nReactDOM.render(\n    <Provider store={store}>\n       <MapContainer />\n    </Provider>\n    , root\n);\n\n\n\n\n\n\n\n"],"sourceRoot":""}